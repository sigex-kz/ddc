name: Test and build
on: [push]
jobs:
  lint:
    runs-on: ubuntu-latest
    container: golangci/golangci-lint:v1.40
    steps:
      - uses: actions/checkout@v2
      - run: golangci-lint run -v ./...

  test:
    runs-on: ubuntu-latest
    container: golang:1.16.4-buster
    steps:
      - uses: actions/checkout@v2
      - run: |
          apt -qy update
          apt -qy install clamav clamav-daemon
          mkdir /var/run/clamav/
          chown clamav /var/run/clamav/
          /usr/bin/freshclam --foreground=true
          /usr/sbin/clamd -c /etc/clamav/clamd.conf
          sleep 3
          ls -la /var/run/clamav/
          ps aux
          cat /var/log/clamav/clamav.log
          go test -mod vendor -timeout 30m -count=1 -failfast ./... -v
          jobs
          kill %1

  build:
    if: startsWith( github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    container: golang:1.16.4-buster
    steps:
      - uses: actions/checkout@v2
      - run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - run: |
          cd rpcsrv/cmd/
          go build -mod vendor -ldflags "-X 'main.BuildTimeStamp=$(date +%s)' -X 'main.AppVersion=${{ env.RELEASE_VERSION }}'" -o ddcrpcsrv .
          GOOS=windows GOARCH=amd64 go build -mod vendor -ldflags "-X 'main.BuildTimeStamp=$(date +%s)' -X 'main.AppVersion=${{ env.RELEASE_VERSION }}'" -o ddcrpcsrv.exe .
          GOOS=darwin GOARCH=amd64 go build -mod vendor -ldflags "-X 'main.BuildTimeStamp=$(date +%s)' -X 'main.AppVersion=${{ env.RELEASE_VERSION }}'" -o ddcrpcsrv-darwin .
      - name: Archive rpcsrv builds
        uses: actions/upload-artifact@v2
        with:
          name: rpcsrv-build
          path: rpcsrv/cmd/ddcrpcsrv*
